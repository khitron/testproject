/*
 * This file is PathLP compiler and interpreter command line application,
 * the database management builtins definition file.
 * It was created by Igal Khitron.
 * 
 * The PathLP Logic Programming Language was developed by
 * Professor Mira Balaban, Ben-Gurion University of the Negev, Israel,
 * and Professor Michael Kifer, Stony Brook University, NY, USA.
 *
 */

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% bin/1 (+ builtin predicate as functor) (partially)
% This predicate defines application builtins.

% resetsystem/0
% This predicate prepares empty dynamic space and sets equality and typing
% configurations to default one.

bin(resetsystem) :- getconfig(allmodules, MODULES),
                    forall(member(MOD / _ / _, MODULES),
                    module:resetsystem(MOD)).

% stable/1 (? modname)
% This predicate executes system stability check.
% If module name bounded, it done in particular module only.

bin(stable(ANS)) :- var(ANS),
                    !,
                    retstable(ANS).
bin(stable(MOD)) :- dostable(MOD).

% TODO
bin(stable(CONSTR, _)) :- var(CONSTR),
                          !,
					      throwerr('Variable constraint name').
bin(stable(CONSTR, ANS)) :- makestableone(CONSTR, ANS).
