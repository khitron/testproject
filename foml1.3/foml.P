% This is main pathlp library.
% It is included in all compiled files beginning.

% Preprocessor unique prefix definitions.



% Trie indexing, part 1.
:- '_^pathlp_247_ index'(1, 'MODNAME').

% Multifile dynamic pure language predicates.
:- multifile '_^pathlp_247_ q_constraint MODNAME'     /4,
             '_^pathlp_247_ q_equal MODNAME'          /2,
             '_^pathlp_247_ q_membership MODNAME'     /2,
             '_^pathlp_247_ q_property MODNAME'       /3,
             '_^pathlp_247_ q_subclass MODNAME'       /2,
             '_^pathlp_247_ q_type MODNAME'           /5,
             '_^pathlp_247_ fact_q_equal MODNAME'     /2,
             '_^pathlp_247_ fact_q_membership MODNAME'/2,
             '_^pathlp_247_ fact_q_property MODNAME'  /3,
             '_^pathlp_247_ fact_q_subclass MODNAME'  /2,
             '_^pathlp_247_ fact_q_type MODNAME'      /5.
:- dynamic '_^pathlp_247_ q_constraint MODNAME'/4,
           '_^pathlp_247_ q_equal MODNAME'     /2, '_^pathlp_247_ fact_q_equal MODNAME'     /2,
           '_^pathlp_247_ q_membership MODNAME'/2, '_^pathlp_247_ fact_q_membership MODNAME'/2,
           '_^pathlp_247_ q_property MODNAME'  /3, '_^pathlp_247_ fact_q_property MODNAME'  /3,
           '_^pathlp_247_ q_subclass MODNAME'  /2, '_^pathlp_247_ fact_q_subclass MODNAME'  /2,
           '_^pathlp_247_ q_type MODNAME'      /5, '_^pathlp_247_ fact_q_type MODNAME'      /5.

% Trie indexing, part 2.
:- '_^pathlp_247_ index'(2, 'MODNAME').

% Compiled file.

:- '_^pathlp_247_ directive'((__MD = MODNAME, bin(if(bin(existsmodule(foml)), bin(otherwise), bin(newmodule(foml)))))).
:- '_^pathlp_247_ directive'((__MD = MODNAME, bin(if(bin(existsmodule(graph)), bin(otherwise), bin(newmodule(graph)))))).
:- '_^pathlp_247_ directive'((__MD = MODNAME, bin(module(foml)))).
:- '_^pathlp_247_ directive'((__MD = MODNAME, bin(load(types, 'MODNAME')))).
:- '_^pathlp_247_ directive'((__MD = MODNAME, bin(load('foml-base', foml)))).
